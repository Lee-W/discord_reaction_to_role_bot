{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#discord-reaction-to-role-bot","title":"Discord reaction to role bot","text":"<p>Discord bot that can edit members' roles based on their reactions to a message</p> <p>The bot is designed to exit once all operations are completed, allowing us to run it like a terminal command rather than keeping a bot server running.</p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Python</li> </ul>"},{"location":"#configuration","title":"Configuration","text":"<p>This tool can retrieve configuration settings from either an environment variable called \"CONFIG_JSON\" or a configuration file named \"config.json\".</p> <ul> <li>from the environment variable</li> </ul> <pre><code>export CONFIG_JSON='\n{\n    \"discord_token\": \"&lt;Your token&gt;\",\n    \"guilds\": [\n        {\n            \"guild_id\": &lt;Your guild ID&gt;,\n            \"channels\": [\n                {\n                    \"channel_id\": &lt;Your channel ID&gt;,,\n                    \"messages\": [\n                        {\n                            \"message_id\": &lt;Your message ID&gt;,\n                            \"operation\": \"add_roles\",\n                            \"emoji_to_role_id\": {\n                                \"\ud83d\udcaf\": &lt;Role ID&gt;,\n                                \"\ud83d\udc4d\": &lt;Role ID&gt;\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n\n'\n</code></pre> <ul> <li>from \"config.json\"</li> </ul> <pre><code>{\n    \"discord_token\": \"&lt;Your token&gt;\",\n    \"guilds\": [\n        {\n            \"guild_id\": &lt;Your guild ID&gt;,\n            \"channels\": [\n                {\n                    \"channel_id\": &lt;Your channel ID&gt;,,\n                    \"messages\": [\n                        {\n                            \"message_id\": &lt;Your message ID&gt;,\n                            \"operation\": \"add_roles\",\n                            \"emoji_to_role_id\": {\n                                \"\ud83d\udcaf\": &lt;Role ID&gt;,\n                                \"\ud83d\udc4d\": &lt;Role ID&gt;\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n\n</code></pre>"},{"location":"#columns","title":"Columns","text":"<ul> <li><code>discord_token</code> (str): discord token for the bot</li> <li><code>guilds</code> (list[GuildMetadata]): metadata of the guilds that contain the message for members to react to<ul> <li><code>guild_id</code> (int): discord guild id</li> <li><code>channel</code> (list[ChannelMetadata]): metadata of the channels that contain the message for members to react to<ul> <li><code>channel_id</code> (int): discord channel_id</li> <li><code>messages</code>: (list[MessageMetadata]): metadata of the messages for members to react to<ul> <li><code>message_id</code> (int): discord message id</li> <li><code>operation</code> (str): currently only supports <code>add_roles</code>, <code>remove_roles</code></li> <li><code>emoji_to_role_id</code> (dict[str, int]): the mapping from emoji to the id of the role to operate</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"#usage","title":"Usage","text":"<pre><code># Step 1: Install required dependency\npipenv install\n\n# Step 2: Set up configuration as the previous section describe\n\n# Step 3: Run the bot\npipenv run python bot/bot.py\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>See Contributing</p>"},{"location":"#authors","title":"Authors","text":"<p>Wei Lee weilee.rx@gmail.com</p> <p>Created from Lee-W/cookiecutter-python-template version 1.10.1</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#step-1-fork-this-repository-to-your-github","title":"Step 1. Fork this repository to your GitHub","text":""},{"location":"contributing/#step-2-clone-the-repository-from-your-github","title":"Step 2. Clone the repository from your GitHub","text":"<pre><code>git clone https://github.com/[YOUR GITHUB ACCOUNT]/bot.git\n</code></pre>"},{"location":"contributing/#step-3-add-this-repository-to-the-remote-in-your-local-repository","title":"Step 3. Add this repository to the remote in your local repository","text":"<pre><code>git remote add upstream \"discord_reaction_to_role_bot\"\n</code></pre> <p>You can pull the latest code in main branch through <code>git pull upstream main</code> afterward.</p>"},{"location":"contributing/#step-4-check-out-a-branch-for-your-new-feature","title":"Step 4. Check out a branch for your new feature","text":"<pre><code>git checkout -b [YOUR FEATURE]\n</code></pre>"},{"location":"contributing/#step-5-install-prerequisite","title":"Step 5. Install prerequisite","text":"<pre><code>python -m pip install pipx\npython -m pipx install pipenv invoke\npython -m pipx ensurepath\n</code></pre> <ul> <li>pipx: for python tool management</li> <li>pipenv: for dependency management</li> <li>invoke: for task management</li> </ul>"},{"location":"contributing/#step-6-create-your-local-python-virtual-environment-and-install-dependencies","title":"Step 6. Create your local Python virtual environment and install dependencies","text":"<pre><code>inv env.init-dev\n</code></pre>"},{"location":"contributing/#step-7-work-on-your-new-feature","title":"Step 7. Work on your new feature","text":"<p>Note that this project follows conventional-commit and bumps version based on it. Use the following command to commit your changes.</p> <pre><code>inv git.commit\n</code></pre>"},{"location":"contributing/#step-8-run-test-cases","title":"Step 8. Run test cases","text":"<p>Make sure all test cases pass.</p> <pre><code>inv test\n</code></pre>"},{"location":"contributing/#step-9-run-test-coverage","title":"Step 9. Run test coverage","text":"<p>Check the test coverage and see where you can add test cases.</p> <pre><code>inv test.cov\n</code></pre>"},{"location":"contributing/#step-10-reformat-source-code","title":"Step 10. Reformat source code","text":"<p>Format your code through <code>black</code> and <code>ruff</code>.</p> <pre><code>inv style.format\n</code></pre>"},{"location":"contributing/#step-11-run-style-check","title":"Step 11. Run style check","text":"<p>Make sure your coding style passes all enforced linters.</p> <pre><code>inv style\n</code></pre>"},{"location":"contributing/#step-12-run-security-check","title":"Step 12. Run security check","text":"<p>Ensure the packages installed are secure, and no server vulnerability is introduced</p> <pre><code>inv secure\n</code></pre>"},{"location":"contributing/#step-13-create-a-pull-request-and-celebrate","title":"Step 13. Create a Pull Request and celebrate \ud83c\udf89","text":""}]}